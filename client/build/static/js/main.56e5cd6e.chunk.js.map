{"version":3,"sources":["containers/navbar/navbar.module.css","components/Spinner/Spinner.module.css","Hoc/Hoc.js","store/actions/actionTypes.js","utility/setAuth.js","store/actions/auth.js","store/actions/shop.js","containers/navbar/navbar.js","components/Product/Product.js","components/Spinner/Spinner.js","containers/Home/Home.js","store/actions/error.js","containers/auth/Login.js","containers/auth/Signin.js","store/actions/admin.js","containers/Cart/Cart.js","containers/AddProduct/AddProduct.js","containers/Product/Product.js","containers/Orders/Order/Order.js","containers/Orders/Orders.js","components/Footer/Footer.js","containers/auth/ResetPassword.js","containers/App/App.js","serviceWorker.js","store/reducers/shop.js","store/reducers/auth.js","store/reducers/admin.js","store/reducers/error.js","store/store.js","index.js"],"names":["module","exports","Hoc","this","props","children","Component","SET_ERRORS","setAuth","token","axios","defaults","headers","common","signUp","userData","history","dispatch","post","then","res","error","type","actionTypes","errors","push","signUpSuccess","data","setLoading","catch","err","setLoginState","decodedToken","loginSuccess","localStorage","setItem","jwt_decode","resetPasswordSuccess","location","msg","pathname","getProducts","path","get","products","getProductsSucess","getProduct","productId","getProductSucess","Navbar","closeSidebar","$","css","resetNav","showSidebar","setNav","sideAuthLink","authLink","className","classnames","classes","navItem","window","navLink","style","right","to","margin","sideLink","isAuthenticated","onClick","logOut","navigationBar","navbar","src","alt","icon","showNavBar","sidebar","Sidebar","SidebarNav","closebtn","withRouter","connect","state","auth","shop","removeItem","Product","imageUrl","width","height","title","price","Spinner","loader","Home","resetLoading","map","productData","key","_id","description","loading","getDerivedStateFromProps","shopActions","clearError","indexes","Login","email","password","onChangeHandler","event","oldState","target","name","value","length","index","findIndex","param","match","setState","onSubmitHandler","preventDefault","submitHandler","showPassword","inputField","parentNode","firstChild","clearErrors","spinner","show","noValidate","placeholder","id","onChange","authActions","errorActions","Signin","confirmPassword","forEach","cartFail","addToCart","getCart","addToCartSuccess","removeFromCart","removeFromCartSuccess","cart","getCartSuccess","deleteProductSuccess","delete","productDeleted","addProduct","addProductSuccess","order","orderSuccess","getOrders","orders","getOrdersSuccess","addReview","review","addReviewSuccess","removeReview","removeReviewSuccess","getBoughtProducts","boughtProducts","getBoughtProductsSuccess","Cart","item","boxShadow","count","admin","adminActions","AddProduct","filename","splice","onChangeHandlerFile","files","upload_file","params","FormData","append","clearProductData","split","userId","creator","reviews","find","product","toString","document","getElementsByClassName","trim","buttons","deleteProduct","rows","userName","date","Order","items","total","Orders","orderList","Footer","zIndex","Date","getFullYear","ResetPassword","resetMsg","errorMsg","router","App","myProducts","exact","component","from","marginLeft","Boolean","hostname","initialState","reducer","action","user","filter","includes","rootReducer","combineReducers","shopReducer","authReducer","adminReducer","errorReducer","store","createStore","applyMiddleware","thunk","getItem","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.56e5cd6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"navbar_navbar__3dsc0\",\"icon\":\"navbar_icon__26G4p\",\"navItem\":\"navbar_navItem__3AkIx\",\"navLink\":\"navbar_navLink__39uMW\",\"Sidebar\":\"navbar_Sidebar__3KNcl\",\"sideLink\":\"navbar_sideLink__1j0Xb\",\"closebtn\":\"navbar_closebtn__1S3ZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__w_lNe\",\"load2\":\"Spinner_load2__2HsjQ\"};","import { Component } from 'react'\r\n\r\nclass Hoc extends Component {\r\n    render() {\r\n        return (\r\n            this.props.children\r\n        );\r\n    }\r\n}\r\n\r\nexport default Hoc;","export const GET_PRODUCT = 'GET_PRODUCT';\r\nexport const GET_PRODUCTS = 'GET_PRODUCTS';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_CART = 'GET_CART';\r\nexport const CLEAR_PRODUCT_DATA = 'CLEAR_PRODUCT_DATA';\r\nexport const GET_ORDERS_SUCCESS = 'GET_ORDERS_SUCCESS';\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const RESET_LOADING = 'RESET_LOADING';\r\nexport const SET_NAV = 'SET_NAV';\r\nexport const RESET_NAV = 'RESET_NAV';\r\nexport const SET_MSG = 'SET_MSG';\r\nexport const RESET_MSG = 'RESET_MSG';\r\nexport const GET_BOUGHT_PRODUCTS = 'GET_BOUGHT_PRODUCTS';\r\nexport const DEFAULT = 'DEFAULT';\r\n","import axios from 'axios';\r\n\r\nconst setAuth = (token) => {\r\n    if(token){\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    }else{\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n}\r\n\r\nexport default setAuth;","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\nimport setAuth from '../../utility/setAuth';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const signUpSuccess = (res, history) => {\r\n    if(res.error){\r\n        return {\r\n            type : actionTypes.SET_ERRORS,\r\n            errors : res.error\r\n        };\r\n    }else{\r\n        history.push('/login');\r\n        return {\r\n            type : actionTypes.CLEAR_ERRORS\r\n        };\r\n    }\r\n}\r\n\r\nexport const signUp = (userData, history) => {\r\n    return dispatch => {\r\n        axios.post(`https://selnby.herokuapp.com/signup`, userData)\r\n        .then(res => {\r\n            dispatch(signUpSuccess(res.data, history));\r\n            dispatch(setLoading());\r\n        }).catch(err => {\r\n            \r\n            // dispatch(signUpFail(err));\r\n        });\r\n    }\r\n}\r\n\r\nexport const setLoginState = (decodedToken, history) => {\r\n    if(history){\r\n        history.push('/myProducts');\r\n    }\r\n\r\n    return {\r\n        type : actionTypes.LOGIN_SUCCESS,\r\n        res : decodedToken\r\n    };\r\n}\r\n\r\nexport const loginFail = (error) => {\r\n    return {\r\n        type : actionTypes.SET_ERRORS,\r\n        errors : error\r\n    };\r\n}\r\n\r\nexport const loginSuccess = (res, history) => dispatch => {\r\n    if(res.error){\r\n        dispatch(loginFail(res.error));\r\n        dispatch(setLoading());\r\n    }else{\r\n        localStorage.setItem('jwtToken', res.token);\r\n        setAuth(res.token);\r\n        const decodedToken = jwt_decode(res.token);\r\n        dispatch(setLoginState(decodedToken, history));\r\n        dispatch(setLoading());\r\n    }\r\n}\r\n\r\nexport const login = (userData, history) => {\r\n    return dispatch => {\r\n        axios.post(`https://selnby.herokuapp.com/login`, userData)\r\n        .then(res => {\r\n            dispatch(loginSuccess(res.data, history));\r\n        }).catch(err => {\r\n            \r\n        });\r\n    }\r\n}\r\n\r\nexport const logOut = () => dispatch => {\r\n    localStorage.removeItem('jwtToken');\r\n    setAuth(null);\r\n    dispatch(setLoginState(null));  \r\n}\r\n\r\nexport const setLoading = () => {\r\n    return {\r\n        type : actionTypes.SET_LOADING\r\n    };\r\n}\r\n\r\nexport const resetPasswordSuccess = (res, location, history) => {\r\n    if(!res.msg || res.msg !== 'Success'){\r\n        return {\r\n            type : actionTypes.SET_ERRORS,\r\n            errors : res.error ? res.error : [],\r\n            msg : res.msg\r\n        };\r\n    }else{\r\n        if(location.pathname === '/forgotPassword'){\r\n            return {\r\n                type : actionTypes.SET_MSG,\r\n                msg : 'We have send an email to specified address. Please check it.'\r\n            };\r\n        }else{\r\n            history.push('/login');\r\n            return {\r\n                type : actionTypes.DEFAULT\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetPassword = (userData, router) => {\r\n    return dispatch => {\r\n        if(router.location.pathname === '/forgotPassword'){\r\n            axios.post('https://selnby.herokuapp.com/resetConfirm', {\r\n                email : userData.email\r\n            }).then(res => {\r\n                dispatch(resetPasswordSuccess(res.data, router.location, router.history));\r\n            })\r\n            .catch(err => {\r\n                // console.log('err in resetting password 1', err);\r\n            });\r\n        }else{\r\n            axios.post(`https://selnby.herokuapp.com/resetPassword/${router.match.params.token}`, {\r\n                password : userData.password\r\n            }).then(res => {\r\n                dispatch(resetPasswordSuccess(res.data, router.location, router.history));\r\n            })\r\n            .catch(err => {\r\n                // console.log('err in resetting password 2', err);\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport const resetMsg = () => {\r\n    return {\r\n        type : actionTypes.RESET_MSG\r\n    };\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getProductsSucess = res => {\r\n    if(res.error){\r\n        return {\r\n            type : actionTypes.SET_ERRORS,\r\n            errors : res.error\r\n        }\r\n    }\r\n\r\n    return {\r\n        type : actionTypes.GET_PRODUCTS,\r\n        products : res\r\n    };\r\n}\r\n\r\nexport const getProducts = (path) => {\r\n    return dispatch => {\r\n        if(path === '/'){\r\n            path = '/shop';\r\n        }\r\n\r\n        axios.get(`https://selnby.herokuapp.com${path}`)\r\n        .then(res => {\r\n            dispatch(getProductsSucess(res.data));\r\n        }).catch(err => {\r\n            // console.log('error in getProducts action');\r\n        });\r\n    };\r\n}\r\n\r\nexport const getProductSucess = (res, history) => {\r\n    if(res.error){\r\n        history.push('/');\r\n        return {\r\n            type : actionTypes.SET_ERRORS,\r\n            errors : res.error\r\n        }\r\n    }\r\n\r\n    return {\r\n        type : actionTypes.GET_PRODUCT,\r\n        res : res\r\n    };\r\n}\r\n\r\nexport const getProduct = (productId, history) => {\r\n    return dispatch => {\r\n        axios.get(`https://selnby.herokuapp.com/product/${productId}`)\r\n        .then(res => {\r\n            dispatch(getProductSucess(res.data, history));\r\n        }).catch(err => {\r\n            // console.log('Err occured in getProduct');\r\n        })\r\n    }\r\n}\r\n\r\nexport const setLoading = () => {\r\n    return {\r\n        type : actionTypes.SET_LOADING\r\n    };\r\n}\r\n\r\nexport const resetLoading = () => {\r\n    return {\r\n        type : actionTypes.RESET_LOADING\r\n    };\r\n}\r\n\r\nexport const setNav = () => {\r\n    return {\r\n        type : actionTypes.SET_NAV\r\n    };\r\n}\r\n\r\nexport const resetNav = () => {\r\n    return {\r\n        type : actionTypes.RESET_NAV\r\n    };\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Hoc from '../../Hoc/Hoc';\r\nimport * as authActions from '../../store/actions/auth';\r\nimport * as shopActions from '../../store/actions/shop';\r\nimport {withRouter} from 'react-router';\r\nimport classnames from 'classnames';\r\nimport classes from './navbar.module.css';\r\nimport $ from 'jquery';\r\n\r\nclass Navbar extends Component {\r\n    closeSidebar = () => {\r\n        $('.Sidebar').css('width', '0');\r\n        $('.Sidebar').css('display', 'none');\r\n        this.props.resetNav();   \r\n    }\r\n\r\n    showSidebar = () => {\r\n        $('.Sidebar').css('width', '25vw');\r\n        $('.Sidebar').css('display', 'flex');\r\n        this.props.setNav();\r\n    }\r\n\r\n    render() {\r\n        let sideAuthLink;\r\n        let authLink =  <Hoc>\r\n                            <li className={classnames(\"nav-item\", classes.navItem, {\"active\" : window.location.pathname === '/signin'})}>\r\n                                <Link className={classnames(\"nav-link text-center text-dark authLink\", classes.navLink)} style={{right : \"9vmin\"}} to=\"/signup\">Sign Up</Link>\r\n                            </li>\r\n                            <li className={classnames(\"nav-item\", classes.navItem, {\"active\" : window.location.pathname === '/login'})}>\r\n                                <Link className={classnames(\"nav-link text-center text-dark authLink\", classes.navLink)} style={{margin : \"0px\", right : \"1vmin\"}} to=\"/login\">Login</Link>\r\n                            </li>\r\n                        </Hoc>;\r\n        \r\n        sideAuthLink = <Hoc>\r\n                            <li className={classnames(\"nav-item\", {\"active\" : window.location.pathname === '/signin'})}>\r\n                                <Link className={classnames(\"nav-link text-center text-dark\", classes.sideLink)} to=\"/signup\">Sign Up</Link>\r\n                            </li>\r\n                            <li className={classnames(\"nav-item\", {\"active\" : window.location.pathname === '/login'})}>\r\n                                <Link className={classnames(\"nav-link text-center text-dark\", classes.sideLink)} to=\"/login\">Login</Link>\r\n                            </li>\r\n                        </Hoc>;\r\n        \r\n        if(this.props.isAuthenticated){\r\n            authLink = <Hoc>\r\n                            <li className={classnames(\"nav-item\", classes.navItem, {\"active\" : window.location.pathname === '/addProduct'})}>\r\n                                <Link className={classnames(\"nav-link text-center text-dark\", classes.navLink)} to=\"/addProduct\">Add Product</Link>\r\n                            </li>\r\n                            <li className={classnames(\"nav-item\", classes.navItem, {\"active\" : window.location.pathname === '/myOrders'})}>\r\n                                <Link className={classnames(\"nav-link text-center text-dark\", classes.navLink)} to=\"/myOrders\">Orders</Link>\r\n                            </li>\r\n                            <li className={classnames(\"nav-item\", classes.navItem)}>\r\n                                <Link className={classnames(\"nav-link text-center text-dark authLink\", classes.navLink)} style={{right : \"1vmin\"}} onClick={() => this.props.logOut()} to=\"/login\">Logout</Link>\r\n                            </li>\r\n                        </Hoc>;\r\n            \r\n            sideAuthLink = <Hoc>\r\n                                <li className={classnames(\"nav-item\", {\"active\" : window.location.pathname === '/addProduct'})}>\r\n                                    <Link className={classnames(\"nav-link text-center text-dark\", classes.sideLink, {\"active\" : window.location.pathname === '/addProduct'})} to=\"/addProduct\">Add Product</Link>\r\n                                </li>\r\n                                <li className={classnames(\"nav-item\", {\"active\" : window.location.pathname === '/myOrders'})}>\r\n                                    <Link className={classnames(\"nav-link text-center text-dark\", classes.sideLink, {\"active\" : window.location.pathname === '/myOrders'})} to=\"/myOrders\">Orders</Link>\r\n                                </li>\r\n                                <li className={classnames(\"nav-item\")}>\r\n                                    <Link className={classnames(\"nav-link text-center text-dark\", classes.sideLink, {\"active\" : window.location.pathname === '/logout'})} onClick={() => this.props.logOut()} to=\"/login\">Logout</Link>\r\n                                </li>\r\n                            </Hoc>;\r\n        }\r\n\r\n        let navigationBar = (<div className={classnames('navbar navbar-expand p-0 mb-2', classes.navbar)}>\r\n                                <ul className={classnames(\"navbar-nav\")}>\r\n                                    <li className={classnames(\"nav-item\", classes.navItem)}>\r\n                                        <img src=\"https://selnby.herokuapp.com/images/selnby.jpg\" alt=\"Logo\"/>\r\n                                    </li>\r\n                                    <li className={classnames(\"nav-item icon\", classes.icon)}>\r\n                                        <button className=\"btn btn-light\" onClick={() => this.showSidebar()}><i className=\"fas fa-bars\"></i></button>\r\n                                    </li>\r\n                                    <li className={classnames(\"nav-item\", classes.navItem, {\"active\" : window.location.pathname === '/'})}>\r\n                                        <Link className={classnames(\"nav-link text-center text-dark\", classes.navLink)} to='/'>Home</Link>\r\n                                    </li>\r\n                                    <li className={classnames(\"nav-item\", classes.navItem, {\"active\" : window.location.pathname === '/myProducts'})}>\r\n                                        <Link className={classnames(\"nav-link text-center text-dark\", classes.navLink)} to=\"/myProducts\">My Products</Link>\r\n                                    </li>\r\n                                    <li className={classnames(\"nav-item\", classes.navItem, {\"active\" : window.location.pathname === '/cart'})}>\r\n                                        <Link className={classnames(\"nav-link text-center text-dark\", classes.navLink)} to=\"/cart\"><i className=\"fas fa-shopping-bag\"></i>Cart</Link>\r\n                                    </li>\r\n                                    {authLink}\r\n                                </ul>\r\n                            </div>);\r\n        \r\n        if(!this.props.showNavBar){\r\n            navigationBar = '';\r\n        }\r\n\r\n        let sidebar = (<div className={classnames('Sidebar navbar p-0', classes.Sidebar)}>\r\n                        <ul className={classnames(\"navbar-nav\", classes.SidebarNav)}>\r\n                            <li className={classnames(\"nav-item\")}>\r\n                                <button className={classnames(\"text-dark btn\", classes.closebtn)} onClick={() => this.closeSidebar()}>&times;</button>\r\n                            </li>\r\n                            <li className={classnames(\"nav-item\")}>\r\n                                <img src=\"http://localhost:5000/images/selnby.jpg\" alt=\"Logo\"/>\r\n                            </li>\r\n                            <li className={classnames(\"nav-item\")}>\r\n                                <Link className={classnames(\"nav-link text-center text-dark\", classes.sideLink, {\"active\" : window.location.pathname === '/'})} to='/'>Home</Link>\r\n                            </li>\r\n                            <li className={classnames(\"nav-item\")}>\r\n                                <Link className={classnames(\"nav-link text-center text-dark\", classes.sideLink, {\"active\" : window.location.pathname === '/myProducts'})} to=\"/myProducts\">My Products</Link>\r\n                            </li>\r\n                            <li className={classnames(\"nav-item\")}>\r\n                                <Link className={classnames(\"nav-link text-center text-dark\", classes.sideLink, {\"active\" : window.location.pathname === '/cart'})} to=\"/cart\"><i className=\"fas fa-shopping-bag\"></i>Cart</Link>\r\n                            </li>\r\n                            {sideAuthLink}\r\n                        </ul>\r\n                    </div>);\r\n\r\n        if(!this.props.showSidebar){\r\n            sidebar = '';\r\n        }\r\n\r\n        return (\r\n            <Hoc>\r\n                {navigationBar}\r\n                {sidebar}\r\n            </Hoc>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated : state.auth.isAuthenticated,\r\n        showNavBar : state.shop.showNavBar,\r\n        showSidebar : state.shop.showSidebar\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logOut : () => dispatch(authActions.logOut()),\r\n        setNav : () => dispatch(shopActions.setNav()),\r\n        resetNav : () => dispatch(shopActions.resetNav())\r\n    };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Navbar));","import React, {Component} from 'react';\r\n\r\nclass Product extends Component{\r\n    render(){\r\n        return (<div className=\"card productCard\">\r\n                    <img src={`https://selnby.herokuapp.com/${this.props.imageUrl}`} className=\"card-img-top\" style={{width : \"100%\", height : \"30vh\"}} alt=\"productImage\" />\r\n                    <div className=\"card-body row m-0 p-0 pb-5\">\r\n                        <div className=\"col-12 font-weight-bold text-dark text-center\">{this.props.title}</div>\r\n                        <div className=\"col-12 font-weight-bold text-dark text-center\">&#8377; {this.props.price}</div>\r\n                    </div>\r\n            </div>);\r\n    }\r\n};\r\n\r\nexport default Product;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className={classes.loader}>Loading...</div>\r\n    )\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, Link} from 'react-router-dom';\r\nimport * as shopActions from '../../store/actions/shop';\r\nimport Product from '../../components/Product/Product';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        products : []\r\n    };\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n        return {\r\n            ...state,\r\n            products : [...props.products]\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        let path = this.props.location.pathname;\r\n        \r\n        if(path !== '/myProducts'){\r\n            path = '/';\r\n        }\r\n        \r\n        this.props.getProducts(path);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.resetLoading();\r\n    }\r\n\r\n    render() {\r\n        let products = this.state.products.map(productData => {\r\n            return <Link key={productData._id} className=\"text-decoration-none col-6 col-sm-4 col-md-3 col-xl-2 productLink\" to={`product/${productData._id}`}><Product title={productData.title} description={productData.description} price={productData.price} imageUrl={productData.imageUrl} /></Link>;\r\n        });\r\n\r\n        if(this.props.loading){\r\n            products = <Spinner />\r\n        }\r\n\r\n        return (\r\n            <div className=\"row m-2 mt-3 Home\">\r\n                {products}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        products : state.shop.products,\r\n        loading : state.shop.loading,\r\n        error : state.error.errors\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getProducts : (path) => dispatch(shopActions.getProducts(path)),\r\n        resetLoading : () => dispatch(shopActions.resetLoading())\r\n    };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));","import * as actionTypes from './actionTypes';\r\n\r\nexport const clearError = (indexes) => {\r\n    return {\r\n        type : actionTypes.CLEAR_ERROR,\r\n        indexes : indexes\r\n    };\r\n}\r\n\r\nexport const clearErrors = () => {\r\n    return {\r\n        type : actionTypes.CLEAR_ERRORS\r\n    };\r\n}","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport * as authActions from '../../store/actions/auth';\r\nimport * as errorActions from '../../store/actions/error';\r\nimport * as shopActions from '../../store/actions/shop';\r\nimport classnames from 'classnames';\r\nimport {withRouter} from 'react-router';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        errors : [],\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.setLoading();\r\n    }\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n        return {\r\n            ...state,\r\n            errors : props.errors\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        const oldState = {...this.state};\r\n        oldState[event.target.name] = event.target.value;\r\n        const errors = this.state.errors.map(err => {\r\n            return {...err};\r\n        });\r\n        let indexes = [];\r\n\r\n        if(event.target.name === \"password\"){\r\n            if(event.target.value.length >= 8){\r\n                let index = errors.findIndex(error => error.param === \"password\");\r\n                if(index >= 0){\r\n                    indexes.push(index);\r\n                }\r\n            }\r\n        }else{\r\n            const format = /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\w{2,3})+$/;\r\n            if(event.target.value.match(format)){\r\n                let index = errors.findIndex(error => error.param === \"email\");\r\n\r\n                if(index >= 0 && errors[index].msg !== 'Should be valid e-mail'){\r\n                    index = -1;\r\n                }\r\n\r\n                if(index >= 0){\r\n                    indexes.push(index);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(indexes.length >= 0){\r\n            this.props.clearError(indexes);\r\n        }\r\n\r\n        this.setState({\r\n            ...oldState\r\n        });\r\n    }\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const userData = {\r\n            email : this.state.email,\r\n            password : this.state.password\r\n        }\r\n        this.props.submitHandler(userData, this.props.history);\r\n        this.props.resetLoading();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.clearErrors();\r\n        this.props.resetLoading();\r\n    }\r\n\r\n    showPassword = (event) => {\r\n        event.preventDefault();\r\n        const inputField = event.target.parentNode.parentNode.parentNode.firstChild;\r\n        if(inputField.type === \"password\"){\r\n            inputField.type = \"text\";\r\n        }else{\r\n            inputField.type = \"password\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let show = (<form className=\"my-3 mx-auto p-3 border rounded border-success w-55\" noValidate>\r\n            <div className=\"form-group\">\r\n                <label className=\"d-block\">\r\n                    E-mail:\r\n                    <input \r\n                        type=\"mail\" \r\n                        placeholder=\"E-mail\" \r\n                        name=\"email\" \r\n                        id=\"email\" \r\n                        onChange={(event) => this.onChangeHandler(event)} \r\n                        className={classnames(\"form-control border border-success\", {'is-invalid border-danger' : this.state.errors.findIndex(error => error.param === \"email\") >= 0})} \r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                        {this.state.errors.findIndex(error => error.param === \"email\") >= 0 ? this.state.errors[this.state.errors.findIndex(error => error.param === \"email\")].msg : ''}\r\n                    </div>\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"d-block\">\r\n                    Password:\r\n                    <div className=\"input-group\">\r\n                        <input \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            id=\"password\" \r\n                            placeholder=\"Password\" \r\n                            onChange={(event) => this.onChangeHandler(event)} \r\n                            className={classnames(\"form-control border border-success\", {'is-invalid border-danger' : this.state.errors.findIndex(error => error.param === \"password\") >= 0})} \r\n                        />\r\n                        <div className=\"input-append border border-success\">\r\n                            <button className='h-100 bg-white border-0' onClick={(event) => {this.showPassword(event)}}>\r\n                                <i className=\"fas fa-eye\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"invalid-feedback\">\r\n                        {this.state.errors.findIndex(error => error.param === \"password\") >= 0 ? this.state.errors[this.state.errors.findIndex(error => error.param === \"password\")].msg : ''}\r\n                    </div>\r\n                </label>\r\n            </div>\r\n            <Link to='/forgotPassword' className=\"text-dark d-block m-2 text-decoration-none\">Forgot Password</Link>\r\n            <button \r\n                type=\"submit\" \r\n                onClick={(event) => this.onSubmitHandler(event)} \r\n                className=\"btn btn-outline-success\">\r\n                    Login\r\n            </button>\r\n        </form>);\r\n\r\n        let spinner;\r\n\r\n        if(this.props.loading){\r\n            spinner = <Spinner />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                {show}\r\n                {spinner}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errors : state.error.errors,\r\n        isAuthenticated : state.auth.isAuthenticated,\r\n        loading : state.shop.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        submitHandler : (userData, history) => dispatch(authActions.login(userData, history)),\r\n        clearError : (indexes) => dispatch(errorActions.clearError(indexes)),\r\n        clearErrors : () => dispatch(errorActions.clearErrors()),\r\n        setLoading : () => dispatch(shopActions.setLoading()),\r\n        resetLoading : () => dispatch(shopActions.resetLoading())\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as authActions from '../../store/actions/auth';\r\nimport * as errorActions from '../../store/actions/error';\r\nimport * as shopActions from '../../store/actions/shop';\r\nimport classnames from 'classnames';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nclass Signin extends Component {\r\n    state = {\r\n        errors : [],\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    }\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n        return {\r\n            ...state,\r\n            errors : props.errors\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        const oldState = {...this.state};\r\n        oldState[event.target.name] = event.target.value;\r\n        const errors = this.state.errors.map(err => {\r\n            return {...err};\r\n        });\r\n        let indexes = [];\r\n\r\n        if(event.target.name === \"name\"){\r\n            if(event.target.value.length >= 4){\r\n                errors.forEach((error, index) => {\r\n                    if(error.param === \"name\"){\r\n                        if(error.msg === 'Name must be 4 characters long'){\r\n                            indexes.push(index);\r\n                        }else{\r\n                            if(event.target.value.match(/^[A-Za-z]+$/)){\r\n                                indexes.push(index);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }else if(event.target.name === \"password\"){\r\n            if(event.target.value.length >= 8){\r\n                let index = errors.findIndex(error => error.param === \"password\");\r\n                if(index >= 0){\r\n                    indexes.push(index);\r\n                }\r\n            }\r\n        }else if(event.target.name === \"confirmPassword\"){\r\n            if(event.target.value === this.state.password){\r\n                let index = errors.findIndex(error => error.param === \"confirmPassword\");\r\n                if(index >= 0){\r\n                    indexes.push(index);\r\n                }\r\n            }\r\n        }else{\r\n            const format = /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\w{2,3})+$/;\r\n            if(event.target.value.match(format)){\r\n                let index = errors.findIndex(error => error.param === \"email\");\r\n\r\n                if(index >= 0 && errors[index].msg !== 'Should be valid e-mail'){\r\n                    index = -1;\r\n                }\r\n\r\n                if(index >= 0){\r\n                    indexes.push(index);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(indexes.length >= 0){\r\n            this.props.clearError(indexes);\r\n        }\r\n\r\n        this.setState({\r\n            ...oldState\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.setLoading();\r\n    }\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const userData = {\r\n            name : this.state.name,\r\n            email : this.state.email,\r\n            password : this.state.password,\r\n            confirmPassword : this.state.confirmPassword\r\n        }\r\n\r\n        this.props.submitHandler(userData, this.props.history);\r\n        this.props.resetLoading();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.clearErrors();\r\n        this.props.resetLoading();\r\n    }\r\n\r\n    showPassword = (event) => {\r\n        event.preventDefault();\r\n        const inputField = event.target.parentNode.parentNode.parentNode.firstChild;\r\n        if(inputField.type === \"password\"){\r\n            inputField.type = \"text\";\r\n        }else{\r\n            inputField.type = \"password\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let spinner;\r\n\r\n        if(this.props.loading){\r\n            spinner = <Spinner />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"my-3 mx-auto p-3 border rounded border-success w-55\" noValidate>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"d-block\">\r\n                            Name:\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Mayank\" \r\n                                name=\"name\" \r\n                                id=\"name\" \r\n                                onChange={(event) => this.onChangeHandler(event)} \r\n                                className={classnames(\"form-control border border-success\", {'is-invalid border-danger' : this.state.errors.findIndex(error => error.param === \"name\") >= 0})} \r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                                {this.state.errors.findIndex(error => error.param === \"name\") >= 0 ? this.state.errors[this.state.errors.findIndex(error => error.param === \"name\")].msg : ''}\r\n                            </div>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"d-block\">\r\n                            E-mail:\r\n                            <input \r\n                                type=\"mail\" \r\n                                placeholder=\"E-mail\" \r\n                                name=\"email\" \r\n                                id=\"email\" \r\n                                onChange={(event) => this.onChangeHandler(event)} \r\n                                className={classnames(\"form-control border border-success\", {'is-invalid border-danger' : this.state.errors.findIndex(error => error.param === \"email\") >= 0})} \r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                                {this.state.errors.findIndex(error => error.param === \"email\") >= 0 ? this.state.errors[this.state.errors.findIndex(error => error.param === \"email\")].msg : ''}\r\n                            </div>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"d-block\">\r\n                            Password:\r\n                            <div className=\"input-group\">\r\n                                <input \r\n                                    type=\"password\" \r\n                                    name=\"password\" \r\n                                    id=\"password\" \r\n                                    placeholder=\"Password\" \r\n                                    onChange={(event) => this.onChangeHandler(event)} \r\n                                    className={classnames(\"form-control border border-success\", {'is-invalid border-danger' : this.state.errors.findIndex(error => error.param === \"password\") >= 0})} \r\n                                />\r\n                                <div className=\"input-append border border-success\">\r\n                                    <button className='h-100 bg-white border-0' onClick={(event) => this.showPassword(event)}>\r\n                                        <i className=\"fas fa-eye\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"invalid-feedback\">\r\n                                {this.state.errors.findIndex(error => error.param === \"password\") >= 0 ? this.state.errors[this.state.errors.findIndex(error => error.param === \"password\")].msg : ''}\r\n                            </div>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"d-block\">\r\n                            Confirm Password:\r\n                            <div className=\"input-group\">\r\n                                <input \r\n                                    type=\"password\" \r\n                                    name=\"confirmPassword\" \r\n                                    id=\"confirmPassword\" \r\n                                    placeholder=\"Password\" \r\n                                    onChange={(event) => this.onChangeHandler(event)} \r\n                                    className={classnames(\"form-control border border-success\", {'is-invalid border-danger' : this.state.errors.findIndex(error => error.param === \"confirmPassword\") >= 0})} \r\n                                />\r\n                                <div className=\"input-append border border-success\">\r\n                                    <button className='h-100 bg-white border-0' onClick={(event) => this.showPassword(event)}>\r\n                                        <i className=\"fas fa-eye\"></i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"invalid-feedback\">\r\n                                {this.state.errors.findIndex(error => error.param === \"confirmPassword\") >= 0 ? this.state.errors[this.state.errors.findIndex(error => error.param === \"confirmPassword\")].msg : ''}\r\n                            </div>\r\n                        </label>\r\n                    </div>\r\n                    <button \r\n                        type=\"submit\" \r\n                        onClick={(event) => this.onSubmitHandler(event)} \r\n                        className=\"btn btn-outline-success\">\r\n                            Sign Up\r\n                    </button>\r\n                </form>\r\n                {spinner}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errors : state.error.errors,\r\n        loading : state.shop.loading\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        submitHandler : (userData, history) => dispatch(authActions.signUp(userData, history)),\r\n        clearError : (indexes) => dispatch(errorActions.clearError(indexes)),\r\n        clearErrors : () => dispatch(errorActions.clearErrors()),\r\n        setLoading : () => dispatch(shopActions.setLoading()),\r\n        resetLoading : () => dispatch(shopActions.resetLoading())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\nimport * as shopActions from './shop';\r\n\r\nexport const cartFail = (error) => {\r\n    return {\r\n        type : actionTypes.SET_ERRORS,\r\n        errors : [...error]\r\n    };\r\n}\r\n\r\nexport const addToCartSuccess = (res, history) => {\r\n    return dispatch => {\r\n        if(res.error){\r\n            dispatch(cartFail(res.error));\r\n        }else{\r\n            if(history){\r\n                history.push('/cart');\r\n            }\r\n\r\n            dispatch(getCart());\r\n        }\r\n    }\r\n}\r\n\r\nexport const addToCart = (productId, history) => {\r\n    return dispatch => {\r\n        axios.post(`https://selnby.herokuapp.com/addToCart` , {productId : productId})\r\n        .then(res => {\r\n            dispatch(addToCartSuccess(res.data, history));\r\n        }).catch(err => {\r\n\r\n        });\r\n    }\r\n}\r\n\r\nexport const removeFromCartSuccess = (res) => {\r\n    return dispatch => {\r\n        if(res.error){\r\n            dispatch(cartFail(res.error));\r\n        }else{\r\n            dispatch(getCart());\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (productId) => {\r\n    return dispatch => {\r\n        axios.post(`https://selnby.herokuapp.com/removeFromCart` , {productId : productId})\r\n        .then(res => {\r\n            dispatch(removeFromCartSuccess(res.data));\r\n        }).catch(err => {\r\n            \r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const getCartSuccess = (res) => {\r\n    return {\r\n        type : actionTypes.GET_CART,\r\n        res : res.cart\r\n    };\r\n}\r\n\r\nexport const getCart = () => {\r\n    return dispatch => {\r\n        axios.get(`https://selnby.herokuapp.com/getCart`)\r\n        .then(res => {\r\n            dispatch(getCartSuccess(res.data));\r\n            dispatch(setLoading());\r\n        }).catch(err => {\r\n            \r\n        });\r\n    }\r\n}\r\n\r\nexport const productDeleted = (res, history) => {\r\n    if(res.error){\r\n        return {\r\n            type : actionTypes.SET_ERRORS,\r\n            errors : res.error\r\n        };\r\n    }else{\r\n        history.push('/myProducts');\r\n        return {\r\n            type : actionTypes.DEFAULT\r\n        };\r\n    }\r\n}\r\n\r\nexport const deleteProductSuccess = (productId, history) => {\r\n    return dispatch => {\r\n        axios.delete(`https://selnby.herokuapp.com/delete/${productId}`)\r\n        .then(res => {\r\n            dispatch(productDeleted(res.data, history));\r\n        }).catch(err => {\r\n            \r\n        });\r\n    };\r\n}\r\n\r\nexport const deleteProduct = (productId, history) => {\r\n    return dispatch => {\r\n        axios.post(`https://selnby.herokuapp.com/clearItemFromCart`, {productId : productId})\r\n        .then(res => {\r\n            if(!res.error){\r\n                dispatch(deleteProductSuccess(productId, history));\r\n            }else{\r\n\r\n            }\r\n        }).catch(err => {\r\n            \r\n        })\r\n    };\r\n}\r\n\r\nexport const addProductSuccess = (res, history) => {\r\n    if(res.error){\r\n        return { \r\n            type : actionTypes.SET_ERRORS,\r\n            errors : res.error\r\n        };\r\n    }else{\r\n        history.push('/myProducts');\r\n        return {\r\n            type : actionTypes.DEFAULT\r\n        };\r\n    }\r\n}\r\n\r\nexport const addProduct = (productData, history, productId) => {\r\n    return dispatch => {\r\n        let path = `https://selnby.herokuapp.com/addProduct`;\r\n        \r\n        if(productId){\r\n            path = `https://selnby.herokuapp.com/editProduct/${productId}?edit=true`;\r\n        }\r\n\r\n        axios.post(path, productData, {\r\n            headers : {\r\n                'Content-Type' : 'multipart/form-data'\r\n            }\r\n        })\r\n        .then(res => {\r\n            dispatch(addProductSuccess(res.data, history));\r\n            dispatch(setLoading());\r\n        })\r\n        .catch(err => {\r\n            \r\n        })\r\n    }\r\n}\r\n\r\nexport const clearProductData = () => {\r\n    return {\r\n        type : actionTypes.CLEAR_PRODUCT_DATA\r\n    };\r\n} \r\n\r\nexport const orderSuccess = (res, history) => {\r\n    if(res.error){\r\n        return {\r\n            type : actionTypes.SET_ERRORS,\r\n            errors : res.error\r\n        };\r\n    }else{\r\n        history.push('/myOrders');\r\n        return {\r\n            type : actionTypes.DEFAULT\r\n        };\r\n    }\r\n}\r\n\r\nexport const order = (history) => {\r\n    return dispatch => {\r\n        axios.post(`https://selnby.herokuapp.com/order`)\r\n        .then(res => {\r\n            dispatch(orderSuccess(res.data, history));\r\n        }).catch(err => {\r\n            \r\n        })\r\n    };\r\n}\r\n\r\nexport const getOrdersSuccess = (res) => {\r\n    if(res.error){\r\n        return { \r\n            type : actionTypes.SET_ERRORS,\r\n            errors : res.error\r\n        };\r\n    }else{\r\n        return { \r\n            type : actionTypes.GET_ORDERS_SUCCESS,\r\n            orders : res.orders\r\n        };\r\n    }\r\n}\r\n\r\nexport const getOrders = () => {\r\n    return dispatch => {\r\n        axios.get(`https://selnby.herokuapp.com/myOrders`)\r\n        .then(res => {\r\n            dispatch(getOrdersSuccess(res.data));\r\n            dispatch(setLoading());\r\n        }).catch(err => {\r\n            \r\n        })\r\n    };\r\n}\r\n\r\nexport const setLoading = () => {\r\n    return {\r\n        type : actionTypes.SET_LOADING\r\n    };\r\n}\r\n\r\nexport const addReviewSuccess = (res, productId) => {\r\n    return dispatch => {\r\n        if(res.error){\r\n            return {\r\n                type : actionTypes.SET_ERRORS,\r\n                errors : res.error\r\n            };\r\n        }else{\r\n            dispatch(shopActions.getProduct(productId));\r\n        }\r\n    }\r\n}\r\n\r\nexport const addReview = (productId, review) => {\r\n    return dispatch => {\r\n        axios.post(`https://selnby.herokuapp.com/addReview`, {\r\n            productId : productId,\r\n            review : review\r\n        }).then(res => {\r\n            dispatch(addReviewSuccess(res.data, productId));\r\n        }).catch(err => {\r\n            // console.log('err in addReview reducer');\r\n        });\r\n    }\r\n}\r\n\r\nexport const removeReviewSuccess = (res, productId) => {\r\n    return dispatch => {\r\n        if(res.error){\r\n            return {\r\n                type : actionTypes.SET_ERRORS,\r\n                errors : res.error\r\n            };\r\n        }else{\r\n            dispatch(shopActions.getProduct(productId));\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeReview = (productId) => {\r\n    return dispatch => {\r\n        axios.post(`https://selnby.herokuapp.com/removeReview`, {\r\n            productId : productId\r\n        }).then(res => {\r\n            dispatch(removeReviewSuccess(res.data, productId));\r\n        }).catch(err => {\r\n            // console.log('err in removeReview reducer');\r\n        });\r\n    }\r\n}\r\n\r\nexport const getBoughtProductsSuccess = (res) => {\r\n    if(res.error){\r\n        return {\r\n            type : actionTypes.SET_ERRORS,\r\n            errors : res.error\r\n        };\r\n    }else{\r\n        return {\r\n            type : actionTypes.GET_BOUGHT_PRODUCTS,\r\n            boughtProducts : res.boughtProducts\r\n        };\r\n    }\r\n}\r\n\r\nexport const getBoughtProducts = () => {\r\n    return dispatch => {\r\n        axios.get(`https://selnby.herokuapp.com/getBoughtProducts`)\r\n        .then(res => {\r\n            dispatch(getBoughtProductsSuccess(res.data));\r\n        }).catch(err => {\r\n            // console.log('error in getBoughtProducts', err);\r\n        });\r\n    };\r\n}","import React, { Component } from 'react'\r\nimport * as adminActions from '../../store/actions/admin';\r\nimport * as shopActions from '../../store/actions/shop';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nclass Cart extends Component {\r\n    componentDidMount(){\r\n        this.props.getCart();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.resetLoading();\r\n    }\r\n\r\n    render() {\r\n        let show;\r\n\r\n        if(this.props.cart.length > 0){\r\n            show = (<div className=\"container my-2 mx-auto p-0 w-60\">\r\n                        <div className=\"d-flex justify-content-between mx-1\">\r\n                            <div className=\"font-weight-bold\">{this.props.cart.length} Items</div>\r\n                            <div className=\"font-weight-bold\">Total Price: &#8377;{this.props.price}</div>\r\n                        </div>\r\n                        {this.props.cart.map(item => {\r\n                            return <div key={item.productId._id} className=\"container row p-0 my-3 mx-1\" style={{boxShadow : \"0px 1px 3px grey\"}}>\r\n                                        <div className=\"col-3 p-0 m-0\">\r\n                                            <img src={`https://selnby.herokuapp.com/${item.productId.imageUrl}`} alt=\"productImage\" style={{width : \"100%\", height : \"20vh\", boxShadow: \"0px 1px 4px grey\"}} />\r\n                                        </div>\r\n                                        <div className=\"col-9 m-0\">\r\n                                            <h2 className=\"text-center font-weight-bolder\">{item.productId.title}</h2>\r\n                                            <p className=\"text-center text-justify text-capitalize ml-1\">{item.productId.description}</p>\r\n                                            <p className=\"text-center font-weight-bold\">&#8377;{item.productId.price}</p>\r\n                                            <div className=\"text-center align-bottom\">\r\n                                                Qty : {item.count} \r\n                                                <div className=\"btn-group\">\r\n                                                    <button className=\"btn btn-outline-primary\" onClick={() => this.props.addToCart(item.productId._id)}>+</button>\r\n                                                    <button className=\"btn btn-outline-primary\" onClick={() => this.props.removeFromCart(item.productId._id)}>-</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                        })}\r\n                        <button className=\"btn btn-primary d-block mx-auto\" onClick={() => this.props.order(this.props.history)}>Order Now</button>\r\n                    </div>);\r\n        }else{\r\n            show = <p className=\"text-center display-5\">You have no Items in your cart.</p>;\r\n        }\r\n\r\n        if(this.props.loading){\r\n            show = <Spinner />;\r\n        }\r\n        \r\n        return (\r\n            show\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cart : state.admin.cart,\r\n        price : state.admin.price,\r\n        error : state.error.errors,\r\n        loading : state.shop.loading\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCart : () => dispatch(adminActions.getCart()),\r\n        addToCart : (productId) => dispatch(adminActions.addToCart(productId)),\r\n        removeFromCart : (productId) => dispatch(adminActions.removeFromCart(productId)),\r\n        order : (history) => dispatch(adminActions.order(history)),\r\n        resetLoading : () => dispatch(shopActions.resetLoading())\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","import React, { Component } from 'react';\r\nimport * as adminActions from '../../store/actions/admin';\r\nimport * as shopActions from '../../store/actions/shop';\r\nimport * as errorActions from '../../store/actions/error';\r\nimport {connect} from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport {withRouter} from 'react-router';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nclass AddProduct extends Component {\r\n    state = {\r\n        errors : [],\r\n        title : '',\r\n        price : '',\r\n        description : '',\r\n        imageUrl : null,\r\n        productId : '',\r\n        filename : 'Choose Image:'\r\n    }\r\n \r\n    static getDerivedStateFromProps = (props, state) => {\r\n        if(state.errors.length > 0){\r\n            return {\r\n                ...state\r\n            };\r\n        }else if(props.errors.length > 0){\r\n            return {\r\n                ...state,\r\n                errors : [...props.errors]\r\n            };\r\n        }else if(!state.title && !state.imageUrl && !state.price && !state.description){\r\n            return {\r\n                ...state,\r\n                title : props.productData.title,\r\n                description : props.productData.description,\r\n                price : props.productData.price,\r\n                productId : props.productData.productId,\r\n                filename : props.productData.imageUrl ? props.productData.imageUrl.split('-')[1] : 'Choose Image:'\r\n            };\r\n        }else{\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        const oldState = {...this.state};\r\n        oldState[event.target.name] = event.target.value;\r\n        const errors = this.state.errors.map(err => {\r\n            return {...err};\r\n        });\r\n        let index = -1;\r\n\r\n        if(event.target.name === 'title'){\r\n            if(event.target.value.length >= 3){\r\n                index = errors.findIndex(error => error.param === 'title');\r\n            }\r\n        }else if(event.target.name === 'price'){\r\n            if(+event.target.value > 0){\r\n                index = errors.findIndex(error => error.param === 'price');\r\n            }\r\n        }else{\r\n            if(+event.target.value.length >= 10){\r\n                index = errors.findIndex(error => error.param === 'description');\r\n            }\r\n        }\r\n\r\n        if(index >= 0){\r\n            errors.splice(index, 1);\r\n        }\r\n\r\n        this.setState({\r\n            ...oldState,\r\n            errors : errors\r\n        });\r\n    }\r\n\r\n    onChangeHandlerFile = (event) => {\r\n        if (event.target.files.length) {\r\n            const upload_file = event.target.files[0];\r\n            const oldState = {...this.state};\r\n            oldState.imageUrl = upload_file;\r\n            oldState.filename = upload_file.name;\r\n            const errors = this.state.errors.map(err => {\r\n                return {...err};\r\n            });\r\n            \r\n            const index = errors.findIndex(error => error.param === 'imageUrl');\r\n\r\n            if(index >= 0){\r\n                errors.splice(index, 1);\r\n            }\r\n\r\n            this.setState({\r\n                ...oldState,\r\n                errors : errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmitHandler = (event, history) => {\r\n        event.preventDefault();\r\n\r\n        if(!this.state.imageUrl && !this.props.match.params.productId){\r\n            let errors = [];\r\n            errors.push({\r\n                location : \"body\",\r\n                param : \"imageUrl\",\r\n                msg : \"You have to choose a image\"\r\n            });\r\n\r\n            if(!this.state.title){\r\n                errors.push({\r\n                    location : \"body\",\r\n                    param : \"title\",\r\n                    msg : \"Enter a title\"\r\n                });\r\n            }\r\n\r\n            if(!this.state.price){\r\n                errors.push({\r\n                    location : \"body\",\r\n                    param : \"price\",\r\n                    msg : \"Enter price\"\r\n                });\r\n            }\r\n\r\n            if(!this.state.description){\r\n                errors.push({\r\n                    location : \"body\",\r\n                    param : \"description\",\r\n                    msg : \"Please describe the product\"\r\n                });\r\n            }\r\n\r\n            this.setState({\r\n                errors : [...errors]\r\n            });\r\n        }else{\r\n            this.setState({errors : []});\r\n            let productData = new FormData();\r\n            productData.append('title', this.state.title);\r\n            productData.append('price', this.state.price);\r\n            productData.append('description', this.state.description);\r\n\r\n            if(this.state.imageUrl){\r\n                productData.append('imageUrl', this.state.imageUrl);\r\n            }\r\n            this.props.resetLoading();\r\n            this.props.addProduct(productData, history, this.props.match.params.productId);\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.match.params.productId){\r\n            this.props.getProduct(this.props.match.params.productId);\r\n        }else{\r\n            this.props.clearProductData();\r\n            this.setState({\r\n                errors : [],\r\n                title : '',\r\n                price : '',\r\n                description : '',\r\n                imageUrl : null,\r\n                productId : '',\r\n                filename : 'Choose a Image'\r\n            });\r\n        }\r\n\r\n        this.props.setLoading();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.clearProductData();\r\n        this.props.clearErrors();\r\n        this.props.resetLoading();\r\n    }\r\n\r\n    render() {\r\n        let show;\r\n\r\n        if(this.props.loading){\r\n            show = <Spinner />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"my-3 mx-auto p-3 border rounded border-success w-55\" noValidate>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"d-block\">\r\n                            Title:\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Title\" \r\n                                name=\"title\" \r\n                                id=\"title\" \r\n                                value={this.state.title}\r\n                                onChange={(event) => this.onChangeHandler(event)} \r\n                                className={classnames(\"form-control border border-success\", {'is-invalid border-danger' : this.state.errors.findIndex(error => error.param === \"title\") >= 0})} \r\n                            />\r\n                            \r\n                        </label>\r\n                        <div className=\"invalid-feedback d-block\">\r\n                            {this.state.errors.findIndex(error => error.param === \"title\") >= 0 ? this.state.errors[this.state.errors.findIndex(error => error.param === \"title\")].msg : ''}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <div className=\"custom-file\">\r\n                            <label className={classnames(\"custom-file-label border border-success\", {'is-invalid border-danger' : this.state.errors.findIndex(error => error.param === \"imageUrl\") >= 0})}>\r\n                                {this.state.filename}\r\n                                <input \r\n                                    type=\"file\" \r\n                                    name=\"imageUrl\" \r\n                                    id=\"imageUrl\" \r\n                                    files={this.state.imageUrl}\r\n                                    onChange={(event) => this.onChangeHandlerFile(event)} \r\n                                    className=\"border border-success custom-file-input\" \r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"invalid-feedback d-block\">\r\n                            {this.state.errors.findIndex(error => error.param === \"imageUrl\") >= 0 ? this.state.errors[this.state.errors.findIndex(error => error.param === \"imageUrl\")].msg : ''}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"d-block\">\r\n                            Price:\r\n                            <input \r\n                                type=\"number\" \r\n                                name=\"price\" \r\n                                id=\"price\" \r\n                                value={this.state.price}\r\n                                placeholder=\"price\" \r\n                                onChange={(event) => this.onChangeHandler(event)} \r\n                                className={classnames(\"form-control border border-success\", {'is-invalid border-danger' : this.state.errors.findIndex(error => error.param === \"price\") >= 0})} \r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                                {this.state.errors.findIndex(error => error.param === \"price\") >= 0 ? this.state.errors[this.state.errors.findIndex(error => error.param === \"price\")].msg : ''}\r\n                            </div>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"d-block\">\r\n                            Description:\r\n                            <textarea \r\n                                type=\"text\" \r\n                                name=\"description\" \r\n                                id=\"description\"  \r\n                                value={this.state.description}\r\n                                onChange={(event) => this.onChangeHandler(event)} \r\n                                className={classnames(\"form-control border border-success\", {'is-invalid border-danger' : this.state.errors.findIndex(error => error.param === \"description\") >= 0})} \r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                                {this.state.errors.findIndex(error => error.param === \"description\") >= 0 ? this.state.errors[this.state.errors.findIndex(error => error.param === \"description\")].msg : ''}\r\n                            </div>\r\n                        </label>\r\n                    </div>\r\n                    <button \r\n                        type=\"submit\" \r\n                        onClick={(event) => this.onSubmitHandler(event, this.props.history)} \r\n                        className=\"btn btn-outline-success\">\r\n                            Add Product\r\n                    </button>\r\n                </form>\r\n                {show}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errors : state.error.errors,\r\n        productData : state.shop.productData,\r\n        loading : state.shop.loading\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addProduct : (productData, history, productId) => dispatch(adminActions.addProduct(productData, history, productId)),\r\n        getProduct : (productId) => dispatch(shopActions.getProduct(productId)),\r\n        clearProductData : () => dispatch(adminActions.clearProductData()),\r\n        clearErrors : () => dispatch(errorActions.clearErrors()),\r\n        setLoading : () => dispatch(shopActions.setLoading()),\r\n        resetLoading : () => dispatch(shopActions.resetLoading())\r\n    };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddProduct));","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router';\r\nimport * as shopActions from '../../store/actions/shop';\r\nimport * as adminActions from '../../store/actions/admin';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nclass Product extends Component {\r\n    state = {\r\n        title : '',\r\n        imageUrl : '',\r\n        description : '',\r\n        price : 0,\r\n        userId : '',\r\n        creator : '',\r\n        productId : '',\r\n        reviews : [],\r\n        msg : ''\r\n    }\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n        return {\r\n            ...state,\r\n            title : props.productData.title,\r\n            imageUrl : props.productData.imageUrl,\r\n            description : props.productData.description,\r\n            price : props.productData.price,\r\n            creator : props.productData.userId,\r\n            productId : props.productData._id,\r\n            userId : props.userId,\r\n            reviews : props.productData.reviews\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getProduct(this.props.match.params.productId, this.props.history);\r\n            \r\n        if(this.props.isAuthenticated){\r\n            this.props.getBoughtProducts();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.resetLoading();\r\n    }\r\n\r\n    addReview(){\r\n        if(this.props.isAuthenticated){\r\n            if(this.props.boughtProducts.find(product => product.productId && product.productId.toString() === this.state.productId.toString())){\r\n                const review = document.getElementsByClassName('reviewData')[0].value;\r\n    \r\n                if(review.trim().length > 0){\r\n                    this.props.addReview(this.state.productId, review);\r\n                }\r\n            }else{\r\n                this.setState({msg : 'You can rate only bought products'});\r\n            }\r\n        }else{\r\n            this.setState({msg : 'You must be logged in to rate products'});\r\n        }\r\n    }\r\n\r\n    removeReview(){\r\n        this.props.removeReview(this.state.productId);\r\n    }\r\n\r\n    render() {\r\n        let buttons;\r\n\r\n        if(this.props.isAuthenticated){\r\n            if(this.state.userId && this.state.userId.toString() === this.state.creator.toString()){\r\n                buttons = <div className=\"row mt-3\">\r\n                            <div className=\"col-4\"><button className=\"btn btn-primary w-100\" onClick={() => this.props.addToCart(this.state.productId, this.props.history)}>Add To Cart<i className=\"fas fa-shopping-bag\"></i></button></div>\r\n                            <div className=\"col-4\"><button className=\"btn btn-primary w-100\" onClick={() => this.props.history.push(`/editProduct/${this.state.productId}`)}>Edit</button></div>\r\n                            <div className=\"col-4\"><button className=\"btn btn-danger w-100\" onClick={() => this.props.deleteProduct(this.state.productId, this.props.history)}>Delete</button></div>\r\n                        </div>;\r\n            }else{\r\n                buttons = <div className=\"row mt-3\">\r\n                            <div className=\"col-4 mx-auto\"><button className=\"btn btn-primary w-100\" onClick={() => this.props.addToCart(this.state.productId, this.props.history)}>Add To Cart</button></div>\r\n                        </div>;\r\n            }\r\n        }\r\n\r\n        let show = (<div className=\"container-fluid m-2 mt-4\">\r\n                        <div className=\"row w-100\">\r\n                            <div className=\"col-sm-6 m-0 p-0\">\r\n                                <img \r\n                                    src={`https://selnby.herokuapp.com/${this.state.imageUrl}`} \r\n                                    alt=\"productImage\"  \r\n                                    style={{width : \"100%\", height : \"60vh\", boxShadow: \"0px 1px 4px grey\"}} \r\n                                />\r\n                                {buttons}\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <h2 className=\"text-center font-weight-bolder mt-2\">{this.state.title}</h2>\r\n                                <p className=\"text-center text-justify ml-1\">{this.state.description}</p>\r\n                                <p className=\"text-center font-weight-bold\">&#8377;{this.state.price}</p>\r\n                                <div className=\"mt-2\">\r\n                                    <h3 className=\"ml-1 mt-2 font-weight-bold\">Reviews</h3>\r\n                                    <textarea rows=\"5\" className=\"reviewData form-control\" style={{boxShadow : \"1px 1px 3px grey\"}} placeholder=\"Add review\"></textarea>\r\n                                    <button className=\"btn btn-outline-primary mt-2\" onClick={() => this.addReview()}>Add</button>\r\n                                    <p className=\"text-info\">{this.state.msg}</p>\r\n                                    {this.state.reviews ? this.state.reviews.map(review => {\r\n                                        return (<div className=\"border p-2 my-2\" key={review._id} style={{boxShadow : \"1px 1px 3px grey\"}}>\r\n                                            <div>\r\n                                                <span className=\"font-weight-bold font-size-large mr-1\">\r\n                                                    {review.userName}\r\n                                                </span>\r\n                                                {review.date}\r\n                                            </div>\r\n                                            <div className=\"text-justify my-1\">\r\n                                                {review.review}\r\n                                            </div>\r\n                                            {review.userId.toString() === this.props.userId.toString() ? <button className=\"btn btn-outline-danger\" onClick={() => this.removeReview()}>Delete</button> : ''}\r\n                                        </div>);\r\n                                    }) : ''}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>);\r\n\r\n        if(this.props.loading){\r\n            show = <Spinner />;\r\n        }\r\n\r\n        return (\r\n            show\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        productData : state.shop.productData,\r\n        userId : state.auth.userId,\r\n        isAuthenticated : state.auth.isAuthenticated,\r\n        loading : state.shop.loading,\r\n        boughtProducts : state.auth.boughtProducts\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getProduct : (productId, history) => dispatch(shopActions.getProduct(productId, history)),\r\n        addToCart : (productId, history) => dispatch(adminActions.addToCart(productId, history)),\r\n        deleteProduct : (productId, history) => dispatch(adminActions.deleteProduct(productId, history)),\r\n        resetLoading : () => dispatch(shopActions.resetLoading()),\r\n        addReview : (productId, review) => dispatch(adminActions.addReview(productId, review)),\r\n        removeReview : (productId) => dispatch(adminActions.removeReview(productId)),\r\n        getBoughtProducts : () => dispatch(adminActions.getBoughtProducts())\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Product));","import React from 'react';\r\n\r\nconst Order = (props) => {\r\n    return (\r\n    <div className=\"container my-2 mx-auto p-0 w-60\">\r\n        <div className=\"d-flex justify-content-between mx-1\">\r\n            <div className=\"font-weight-bold\">{props.cart.items.length} Items</div>\r\n            <div className=\"font-weight-bold\">Total Price: &#8377;{props.cart.total}</div>\r\n        </div>\r\n        {props.cart.items.map(item => {\r\n            return <div key={item.productId} className=\"container row p-0 my-3 mx-1\" style={{boxShadow : \"0px 1px 3px grey\"}}>\r\n                        <div className=\"col-3 p-0 m-0\">\r\n                            <img src={`https://selnby.herokuapp.com/${item.imageUrl}`} alt=\"productImage\" style={{width : \"100%\", height : \"20vh\", boxShadow: \"0px 1px 4px grey\"}} />\r\n                        </div>\r\n                        <div className=\"col-9 m-0\">\r\n                            <h2 className=\"text-center font-weight-bolder\">{item.title}</h2>\r\n                            <p className=\"text-center text-justify text-capitalize ml-1\">{item.description}</p>\r\n                            <p className=\"text-center font-weight-bold\">&#8377;{item.price}</p>\r\n                            <div className=\"text-center align-bottom\">Qty : {item.count} </div>\r\n                        </div>\r\n                    </div>\r\n        })}\r\n    </div>\r\n)}\r\n\r\nexport default Order;\r\n","import React, { Component } from 'react'\r\nimport * as adminActions from '../../store/actions/admin';\r\nimport * as shopActions from '../../store/actions/shop';\r\nimport {connect} from 'react-redux';\r\nimport Order from './Order/Order';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n    state = {\r\n        orders : []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getOrders();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.resetLoading();\r\n    }\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n        return {\r\n            ...state,\r\n            orders : props.orders.map(order => {\r\n                return {\r\n                    ...order\r\n                };\r\n            })\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let orderList;\r\n\r\n        if(this.props.orders.length > 0){\r\n            orderList = this.props.orders.map(order => {\r\n                            return <Order key={order._id} cart={order.cart} id={order._id}/>\r\n                        });\r\n        }else{\r\n            orderList = <p>You have no Orders</p>;\r\n        }\r\n\r\n        if(this.props.loading){\r\n            orderList = <Spinner />;\r\n        }\r\n        \r\n        return (\r\n            <div className=\"container-fluid\">\r\n                {orderList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders : state.admin.orders,\r\n        loading : state.shop.loading\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getOrders : () => dispatch(adminActions.getOrders()),\r\n        resetLoading : () => dispatch(shopActions.resetLoading())\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","import React, {Component} from 'react'\r\n\r\nclass Footer extends Component{\r\n    render(){\r\n        return (\r\n            <footer className=\"fixed-bottom footer mt-2 p-2 text-dark text-center w-100\" style={{zIndex : \"10\"}}>\r\n                Copyright &copy; {new Date().getFullYear()} SelNBy\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as authActions from '../../store/actions/auth';\r\nimport * as errorActions from '../../store/actions/error';\r\nimport {withRouter} from 'react-router-dom';\r\nimport classnames from 'classnames';\r\n\r\nclass ResetPassword extends Component {\r\n    state = {\r\n        errors : [],\r\n        email : '',\r\n        password : ''\r\n    }\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n        return {\r\n            ...state,\r\n            errors : props.errors\r\n        }\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        const oldState = {...this.state};\r\n        oldState[event.target.name] = event.target.value;\r\n        const errors = this.state.errors.map(err => {\r\n            return {...err};\r\n        });\r\n        let indexes = [];\r\n\r\n        if(event.target.name === \"password\"){\r\n            if(event.target.value.length >= 8){\r\n                let index = errors.findIndex(error => error.param === \"password\");\r\n                if(index >= 0){\r\n                    indexes.push(index);\r\n                }\r\n            }\r\n        }else{\r\n            const format = /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\w{2,3})+$/;\r\n            if(event.target.value.match(format)){\r\n                let index = errors.findIndex(error => error.param === \"email\");\r\n\r\n                if(index >= 0 && errors[index].msg !== 'Should be valid e-mail'){\r\n                    index = -1;\r\n                }\r\n\r\n                if(index >= 0){\r\n                    indexes.push(index);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(indexes.length >= 0){\r\n            this.props.clearError(indexes);\r\n        }\r\n\r\n        this.setState({\r\n            ...oldState\r\n        });\r\n    }\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const userData = {\r\n            email : this.state.email,\r\n            password : this.state.password\r\n        }\r\n        this.props.submitHandler(userData, this.props);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.clearErrors();\r\n        this.props.resetMsg();\r\n    }\r\n\r\n    showPassword = (event) => {\r\n        event.preventDefault();\r\n        const inputField = event.target.parentNode.parentNode.parentNode.firstChild;\r\n        if(inputField.type === \"password\"){\r\n            inputField.type = \"text\";\r\n        }else{\r\n            inputField.type = \"password\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let inputField = (<div className=\"form-group\">\r\n                            <label className=\"d-block\">\r\n                                E-mail:\r\n                                <input \r\n                                    type=\"mail\" \r\n                                    placeholder=\"E-mail\" \r\n                                    name=\"email\" \r\n                                    id=\"email\" \r\n                                    onChange={(event) => this.onChangeHandler(event)} \r\n                                    className={classnames(\"form-control border border-success\", {'is-invalid border-danger' : this.state.errors.findIndex(error => error.param === \"email\") >= 0})} \r\n                                />\r\n                                <div className=\"invalid-feedback\">\r\n                                    {this.state.errors.findIndex(error => error.param === \"email\") >= 0 ? this.state.errors[this.state.errors.findIndex(error => error.param === \"email\")].msg : ''}\r\n                                </div>\r\n                            </label>\r\n                        </div>);\r\n        \r\n        if(this.props.location.pathname !== '/forgotPassword'){\r\n            inputField = (<div className=\"form-group\">\r\n                            <label className=\"d-block\">\r\n                                Reset Password:\r\n                                <div className=\"input-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        name=\"password\" \r\n                                        id=\"password\" \r\n                                        placeholder=\"Password\" \r\n                                        onChange={(event) => this.onChangeHandler(event)} \r\n                                        className={classnames(\"form-control border border-success\", {'is-invalid border-danger' : this.state.errors.findIndex(error => error.param === \"password\") >= 0})} \r\n                                    />\r\n                                    <div className=\"input-append border border-success\">\r\n                                        <button className='h-100 bg-white border-0' onClick={(event) => {this.showPassword(event)}}>\r\n                                            <i className=\"fas fa-eye\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"invalid-feedback\">\r\n                                    {this.state.errors.findIndex(error => error.param === \"password\") >= 0 ? this.state.errors[this.state.errors.findIndex(error => error.param === \"password\")].msg : ''}\r\n                                </div>\r\n                            </label>\r\n                        </div>);\r\n        }\r\n\r\n        return (\r\n            <form className=\"container my-3 mx-3 mx-auto p-3 border rounded border-success w-55\" noValidate>\r\n                {this.props.msg ? <p className=\"text-center text-info\">{this.props.msg}</p> : ''}\r\n                {this.props.errorMsg ? <p className=\"text-center text-danger\">{this.props.errorMsg}</p> : ''}\r\n                {inputField}\r\n                <button \r\n                    type=\"submit\" \r\n                    onClick={(event) => this.onSubmitHandler(event)} \r\n                    className=\"btn btn-outline-success\">\r\n                        Submit\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        errors : state.error.errors,\r\n        msg : state.auth.msg,\r\n        errorMsg : state.error.msg\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        submitHandler : (userData, router) => dispatch(authActions.resetPassword(userData, router)),\r\n        clearError : (indexes) => dispatch(errorActions.clearError(indexes)),\r\n        clearErrors : () => dispatch(errorActions.clearErrors()),\r\n        resetMsg : () => dispatch(authActions.resetMsg())\r\n    };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ResetPassword));","import React, {Component} from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport Navbar from '../navbar/navbar';\r\nimport Home from '../Home/Home';\r\nimport Login from '../auth/Login'; \r\nimport Signin from '../auth/Signin';\r\nimport Cart from '../Cart/Cart';\r\nimport AddProduct from '../AddProduct/AddProduct';\r\nimport {connect} from 'react-redux';\r\nimport Product from '../Product/Product';\r\nimport Orders from '../Orders/Orders';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport ResetPassword from '../auth/ResetPassword';\r\n\r\nclass App extends Component{\r\n    render(){\r\n        let margin = '0px';\r\n\r\n        if(this.props.showSidebar){\r\n            margin = '25vw';\r\n        }\r\n\r\n        let myProducts = <Switch>\r\n                            <Route exact path=\"/\" component={Home} />\r\n                            <Route exact path=\"/login\"  component={Login} />\r\n                            <Route exact path=\"/signup\" component={Signin} />\r\n                            <Route exact path=\"/product/:productId\" component={Product} />\r\n                            <Redirect exact from=\"/myProducts\" to=\"/login\" />\r\n                            <Redirect exact from=\"/cart\" to=\"/login\" />\r\n                            <Redirect exact from=\"/addProduct\" to=\"/login\" />\r\n                            <Redirect exact from=\"/editProduct/:productId\" to=\"/login\" />\r\n                            <Redirect exact from=\"/myOrders\" to=\"/login\" />\r\n                            <Route exact path=\"/forgotPassword\" component={ResetPassword} />\r\n                            <Route exact path=\"/resetPassword/:token\" component={ResetPassword} />\r\n                            <Redirect  to=\"/\" />\r\n                        </Switch>;\r\n\r\n        if(this.props.isAuthenticated){\r\n           myProducts = (<Switch>\r\n                            <Route exact path=\"/\" component={Home} />\r\n                            <Route exact path=\"/product/:productId\" component={Product} />\r\n                            <Route exact path=\"/myProducts\" component={Home}/>\r\n                            <Route exact path=\"/cart\" component={Cart} />\r\n                            <Route exact path=\"/addProduct\" component={AddProduct} />\r\n                            <Route exact path=\"/editProduct/:productId\" component={AddProduct} />\r\n                            <Route exact path=\"/myOrders\" component={Orders} />\r\n                            <Redirect to=\"/\"/>\r\n                        </Switch>); \r\n        }\r\n\r\n        return <div className=\"app container-fluid p-0 m-0\">\r\n                    <Navbar />\r\n                    <div style={{marginLeft : margin}}>\r\n                        {myProducts}\r\n                        <Footer />\r\n                    </div>\r\n               </div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated : state.auth.isAuthenticated,\r\n        showSidebar : state.shop.showSidebar\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    products : [],\r\n    productData : {\r\n        userId : '',\r\n        price : '',\r\n        title : '',\r\n        description : '',\r\n        imageUrl : null,\r\n        _id : '',\r\n        reviews : []\r\n    },\r\n    loading : true,\r\n    showNavBar : true,\r\n    showSidebar : false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.GET_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                products : action.products.products.map(product => {\r\n                    return {\r\n                        ...product\r\n                    };\r\n                }),\r\n                loading : false\r\n            };\r\n        case actionTypes.GET_PRODUCT:\r\n            return {\r\n                ...state,\r\n                productData : {\r\n                    ...action.res.product\r\n                },\r\n                loading : false\r\n            };\r\n        case actionTypes.CLEAR_PRODUCT_DATA:\r\n            return {\r\n                ...state,\r\n                productData : {\r\n                    userId : '',\r\n                    price : '',\r\n                    title : '',\r\n                    description : '',\r\n                    _id : '',\r\n                    imageUrl : null\r\n                }\r\n            };\r\n        case actionTypes.SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading : false\r\n            };\r\n        case actionTypes.RESET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading : true\r\n            };\r\n        case actionTypes.SET_NAV:\r\n            return {\r\n                ...state,\r\n                showSidebar: true,\r\n                showNavBar: false\r\n            };\r\n        case actionTypes.RESET_NAV:\r\n            return {\r\n                ...state,\r\n                showSidebar: false,\r\n                showNavBar: true\r\n            };\r\n        default:\r\n            return state;     \r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isAuthenticated : false,\r\n    userId : '',\r\n    msg : '',\r\n    boughtProducts : []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated : Boolean(action.res),\r\n                userId : Boolean(action.res) ? action.res.user : '',\r\n                boughtProducts : Boolean(action.res) ? action.res.boughtProducts : ''\r\n            };\r\n        case actionTypes.SET_MSG:\r\n            return {\r\n                ...state,\r\n                msg : action.msg\r\n            };\r\n        case actionTypes.RESET_MSG:\r\n            return {\r\n                ...state,\r\n                msg : ''\r\n            };\r\n        case actionTypes.GET_BOUGHT_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                boughtProducts: action.boughtProducts\r\n            };\r\n        default:\r\n            return state;     \r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    price : 0,\r\n    cart : [],\r\n    orders : []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.GET_CART:\r\n            return {\r\n                ...state,\r\n                price : action.res.total,\r\n                cart : action.res.items.map(item => {\r\n                    return {...item}\r\n                }),\r\n            };\r\n        case actionTypes.GET_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders : action.orders.map(order => {\r\n                    return {...order};\r\n                })\r\n            };\r\n        default:\r\n            return state;     \r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    errors : [],\r\n    msg : ''\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                errors : action.errors.map(error => {\r\n                    return {\r\n                        ...error\r\n                    };\r\n                }),\r\n                msg : action.msg ? action.msg : ''\r\n            };\r\n        case actionTypes.CLEAR_ERROR:\r\n            return {\r\n                ...state,\r\n                // eslint-disable-next-line \r\n                errors : state.errors.filter((err, index) => {\r\n                    if(!action.indexes.includes(index)){\r\n                        return err;\r\n                    }\r\n                })\r\n            };\r\n        case actionTypes.CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                errors : [],\r\n                msg : ''\r\n            };\r\n        default:\r\n            return state;     \r\n    }\r\n}\r\n\r\nexport default reducer;","import thunk from 'redux-thunk';\r\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport shopReducer from './reducers/shop';\r\nimport authReducer from './reducers/auth';\r\nimport adminReducer from './reducers/admin';\r\nimport errorReducer from './reducers/error';\r\n\r\nconst rootReducer = combineReducers({\r\n    shop : shopReducer, \r\n    auth : authReducer,\r\n    admin : adminReducer,\r\n    error : errorReducer\r\n});\r\n\r\n//const composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './store/store';\nimport setAuth from './utility/setAuth';\nimport jwt_decode from 'jwt-decode';\nimport * as authActions from './store/actions/auth';\n\nif(localStorage.getItem('jwtToken')){\n  const token = localStorage.getItem('jwtToken');\n  setAuth(token);\n  const decodedToken = jwt_decode(token);\n  store.dispatch(authActions.setLoginState(decodedToken, null));\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}